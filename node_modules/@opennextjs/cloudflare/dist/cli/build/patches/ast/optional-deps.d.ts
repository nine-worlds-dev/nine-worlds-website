import { type SgNode } from "@ast-grep/napi";
/**
 * Handle optional dependencies.
 *
 * A top level `require(optionalDep)` would throw when the dep is not installed.
 *
 * So we wrap `require(optionalDep)` in a try/catch (if not already present).
 */
export declare const optionalDepRule = "\nrule:\n  pattern: $$$LHS = require($$$REQ)\n  has:\n    pattern: $MOD\n    kind: string_fragment\n    stopBy: end\n    regex: ^caniuse-lite(/|$)\n  not:\n    inside:\n      kind: try_statement\n      stopBy: end\n\nfix: |-\n  try {\n    $$$LHS = require($$$REQ);\n  } catch {\n    throw new Error('The optional dependency \"$MOD\" is not installed');\n  }\n";
export declare function patchOptionalDependencies(root: SgNode): import("@ast-grep/napi").Edit[];
